version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: erp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: erp_admin
      POSTGRES_PASSWORD: erp_secure_password_123
      POSTGRES_DB: erp_database
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - erp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U erp_admin -d erp_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: erp-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: erp_admin
      MONGO_INITDB_ROOT_PASSWORD: erp_secure_password_123
      MONGO_INITDB_DATABASE: erp_audit
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/db/init-mongo.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - erp-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: erp-redis
    restart: unless-stopped
    command: redis-server --requirepass erp_secure_password_123 --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (PostgreSQL GUI - Optional for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: erp-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@erp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - erp-network
    depends_on:
      - postgres

  # MongoDB Express (MongoDB GUI - Optional for development)
  mongo-express:
    image: mongo-express:latest
    container_name: erp-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: erp_admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: erp_secure_password_123
      ME_CONFIG_MONGODB_URL: mongodb://erp_admin:erp_secure_password_123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - erp-network
    depends_on:
      - mongodb

  # Redis Commander (Redis GUI - Optional for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: erp-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:erp_secure_password_123
    ports:
      - "8082:8081"
    networks:
      - erp-network
    depends_on:
      - redis

networks:
  erp-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local